<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$LOCALIZE[10000]</label>
			<label2>Home</label2>
			<icon>shortcuts/home.png</icon>
			<thumb />
			<property name="labelID">10000</property>
			<property name="defaultID">10000</property>
			<property name="widgetSortBy.1.name">None</property>
			<property name="widgetSortBy.1Name">None</property>
			<property name="widgetSortOrder.1.name">descending</property>
			<property name="widgetSortOrder.1Name">ascending</property>
			<property name="widget">Addon</property>
			<property name="widgetName">Next up</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">plugin://script.embuary.helper/?info=getnextup&amp;type=tvshow&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</property>
			<property name="widgetSortBy.name">None</property>
			<property name="widgetSortByName">None</property>
			<property name="widgetSortOrder.name">ascending</property>
			<property name="widgetSortOrderName">ascending</property>
			<property name="widgetName.name">Next up</property>
			<property name="widgetNameName">Next up</property>
			<visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(home,return)</onclick>
			<property name="path">ActivateWindow(home,return)</property>
			<property name="list">home</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10000</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Custom item</label2>
			<icon>shortcuts/tv.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</thumb>
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.99">spotlighttvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetName.99">$LOCALIZE[31185]</property>
			<property name="widgetPath.99">special://skin/extras/widgetplaylists/recommendedtvshows.xsp</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">ContinueWatching</property>
			<property name="widgetType">episodes</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Continue Watching.xsp</property>
			<property name="widget.1">smartshortcuts</property>
			<property name="widgetName.1">StartWatching</property>
			<property name="widgetType.1">episodes</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Shows to Start Watching.xsp</property>
			<property name="widget.2">Playlist</property>
			<property name="widgetName.2">JustOut</property>
			<property name="widgetType.2">episodes</property>
			<property name="widgetTarget.2">videos</property>
			<property name="widgetPath.2">special://profile/playlists/video/recentaired.xsp</property>
			<property name="widget.3">Playlist</property>
			<property name="widgetName.3">RecentlyAdded</property>
			<property name="widgetType.3">tvshows</property>
			<property name="widgetTarget.3">videos</property>
			<property name="widgetPath.3">special://profile/playlists/video/Recent.xsp</property>
			<property name="widgetSortBy.2.name">None</property>
			<property name="widgetSortBy.2Name">None</property>
			<property name="widgetSortOrder.2.name">descending</property>
			<property name="widgetSortOrder.2Name">descending</property>
			<property name="widgetSortBy.3.name">None</property>
			<property name="widgetSortBy.3Name">None</property>
			<property name="widgetSortOrder.3.name">descending</property>
			<property name="widgetSortBy.1.name">None</property>
			<property name="widgetSortBy.1Name">None</property>
			<property name="widgetSortOrder.1.name">descending</property>
			<property name="widgetName.1Name">StartWatching</property>
			<property name="widgetName.name">ContinueWatching</property>
			<property name="widgetNameName">ContinueWatching</property>
			<property name="widget.4">Playlist</property>
			<property name="widgetName.4">RandomTv</property>
			<property name="widgetType.4">episodes</property>
			<property name="widgetTarget.4">videos</property>
			<property name="widgetPath.4">special://profile/playlists/video/Random Tv.xsp</property>
			<property name="widgetName.4.name">RandomTv</property>
			<property name="widgetName.4Name">RandomTv</property>
			<property name="widgetSortOrder.3Name">descending</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[342]</label>
			<label2>Movies</label2>
			<icon>shortcuts/clapperboard.png</icon>
			<thumb>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</thumb>
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.99">spotlightmovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetName.99">$LOCALIZE[31185]</property>
			<property name="widgetPath.99">special://skin/extras/widgetplaylists/recommendedmovies.xsp</property>
			<property name="widgetSortOrder.3Name">descending</property>
			<property name="widget">Playlist</property>
			<property name="widgetName">Movies</property>
			<property name="widgetType">movies</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">special://profile/playlists/video/Movies.xsp</property>
			<property name="widgetSortBy">title</property>
			<property name="widgetSortBy.name">Title</property>
			<property name="widgetSortByName">Title</property>
			<property name="widget.1">Playlist</property>
			<property name="widgetName.1">RandomMovies</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetPath.1">special://profile/playlists/video/Random Movies.xsp</property>
			<property name="widgetSortBy.1.name">None</property>
			<property name="widgetSortBy.1Name">None</property>
			<property name="widgetSortOrder.1Name">descending</property>
			<property name="widgetName.1Name">RandomMovies</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[10040]</label>
			<label2>Custom item</label2>
			<icon>special://home/addons/resource.images.skinicons.wide/resources/addon_1.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="translatedPath">ActivateWindow(Programs,Addons,return)</property>
			<property name="icon.name">addon_1.png</property>
			<property name="iconName">addon_1.png</property>
			<property name="icon">special://home/addons/resource.images.skinicons.wide/resources/addon_1.png</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(AddonBrowser)</onclick>
			<property name="path">ActivateWindow(AddonBrowser)</property>
			<property name="list">AddonBrowser</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10040</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[10004]</label>
			<label2 />
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="translatedPath">ActivateWindow(Settings)</property>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings--0</property>
			<property name="defaultID">settings</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/systeminfo.jpg</property>
			<property name="backgroundName">571</property>
			<visible>!String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onclick>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[String.IsEmpty(Container(4445).NumItems) | Integer.IsEqual(Container(4445).NumItems,0)] | ![Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetProperty(flushWidgetProps,1,Home)</onclick>
			<onclick condition="Integer.IsGreater(Container(4445).NumItems,0) + [Skin.HasSetting(OpenSubMenuOnClick) | String.IsEqual(Skin.String(HomeLayout),win10)]">SetFocus(4444,0)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick condition="String.IsEqual(Skin.String(HomeLayout),bingie) + $EXP[IsKnownMenuEntryPath]">SetFocus($VAR[MenuEntryOverrideFocus])</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings-0</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32045]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32045</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows,return)</property>
			<property name="list">videodb://inprogresstvshows</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>resource://resource.images.skinicons.wide/defaultgenre.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32043]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32043</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">2</property>
			<label>Next Episodes</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://DefaultTvShows.png/</thumb>
			<property name="labelID">nextepisodes</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">2</property>
			<label>NextEpisodes</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">nextepisodes--0</property>
			<property name="defaultID">nextepisodes</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</property>
			<property name="list">special://profile/playlists/video/NextEpisodes.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20434]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<property name="translatedPath">RunAddOn(script.trakt)</property>
			<onclick>RunAddOn(script.trakt)</onclick>
			<property name="path">RunAddOn(script.trakt)</property>
			<property name="list">RunAddOn(script.trakt)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>TheMovieDb Helper</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.video.themoviedb.helper</property>
			<property name="defaultID">plugin.video.themoviedb.helper</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<property name="list">plugin://plugin.video.themoviedb.helper</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>Artwork Beef</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.artwork.beef</property>
			<property name="defaultID">script.artwork.beef</property>
			<property name="translatedPath">RunAddOn(script.artwork.beef)</property>
			<onclick>RunAddOn(script.artwork.beef)</onclick>
			<property name="path">RunAddOn(script.artwork.beef)</property>
			<property name="list">RunAddOn(script.artwork.beef)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>Skin Helper Service Widgets</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.skin.helper.widgets</property>
			<property name="defaultID">script.skin.helper.widgets</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<property name="list">plugin://script.skin.helper.widgets</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2>item</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<property name="translatedPath">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>Video Database Cleaner</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.database.cleaner</property>
			<property name="defaultID">script.database.cleaner</property>
			<property name="translatedPath">RunAddOn(script.database.cleaner)</property>
			<onclick>RunAddOn(script.database.cleaner)</onclick>
			<property name="path">RunAddOn(script.database.cleaner)</property>
			<property name="list">RunAddOn(script.database.cleaner)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR limegreen]Open[/COLOR]Wizard</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.program.openwizard</property>
			<property name="defaultID">plugin.program.openwizard</property>
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<onclick>ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<property name="list">plugin://plugin.program.openwizard</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>common/reload-skin.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID">31714</property>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32046]</label>
			<label2 />
			<icon>common/update-video.png</icon>
			<thumb />
			<property name="labelID">32046</property>
			<property name="defaultID">32046</property>
			<onclick>UpdateLibrary(video)</onclick>
			<property name="path">UpdateLibrary(video)</property>
			<property name="list">UpdateLibrary(video)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32055]</label>
			<label2 />
			<icon>common/clean-video.png</icon>
			<thumb />
			<property name="labelID">32055</property>
			<property name="defaultID">32055</property>
			<onclick>CleanLibrary(video)</onclick>
			<property name="path">CleanLibrary(video)</property>
			<property name="list">CleanLibrary(video)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),settings-0)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Quit</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">quit</property>
			<property name="defaultID">13012</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(900).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-10000">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-alt-num-10000">
		<description>No items</description>
		</include>
	<include name="skinshortcuts-group-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32045]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32045</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows,return)</property>
			<property name="list">videodb://inprogresstvshows</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>resource://resource.images.skinicons.wide/defaultgenre.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32043]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32043</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">2</property>
			<label>Next Episodes</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://DefaultTvShows.png/</thumb>
			<property name="labelID">nextepisodes</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">2</property>
			<label>NextEpisodes</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">nextepisodes--0</property>
			<property name="defaultID">nextepisodes</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</property>
			<property name="list">special://profile/playlists/video/NextEpisodes.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-tvshows">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32045]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32045</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=tvshows&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</property>
			<property name="list">videodb://recentlyaddedepisodes/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(Videos,videodb://inprogresstvshows,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://inprogresstvshows,return)</property>
			<property name="list">videodb://inprogresstvshows</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>resource://resource.images.skinicons.wide/defaultgenre.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">2</property>
			<label>$ADDON[script.skin.helper.widgets 32043]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">addon-script-skin-helper-widgets32043</property>
			<property name="defaultID">369</property>
			<onclick>ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(Videos,plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=nextaired&amp;mediatype=episodes&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">2</property>
			<label>Next Episodes</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://DefaultTvShows.png/</thumb>
			<property name="labelID">nextepisodes</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes",return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=next&amp;mediatype=episodes</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<property name="mainmenuid">2</property>
			<label>NextEpisodes</label>
			<label2>Video Playlist</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">nextepisodes--0</property>
			<property name="defaultID">nextepisodes</property>
			<property name="translatedPath">::PLAYLIST&gt;Videos::</property>
			<onclick>ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://profile/playlists/video/NextEpisodes.xsp,return)</property>
			<property name="list">special://profile/playlists/video/NextEpisodes.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20434]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(MovieSets)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-movies">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31127]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31127</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</property>
			<property name="list">videodb://recentlyaddedmovies/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/inprogressmovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</property>
			<property name="list">special://skin/extras/widgetplaylists/unwatchedmovies.xsp</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20434]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">20434</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(MovieSets)] + String.IsEqual(Window(10000).Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/sets/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/sets/,return)</property>
			<property name="list">videodb://movies/sets/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<property name="translatedPath">RunAddOn(script.trakt)</property>
			<onclick>RunAddOn(script.trakt)</onclick>
			<property name="path">RunAddOn(script.trakt)</property>
			<property name="list">RunAddOn(script.trakt)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>TheMovieDb Helper</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.video.themoviedb.helper</property>
			<property name="defaultID">plugin.video.themoviedb.helper</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<property name="list">plugin://plugin.video.themoviedb.helper</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>Artwork Beef</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.artwork.beef</property>
			<property name="defaultID">script.artwork.beef</property>
			<property name="translatedPath">RunAddOn(script.artwork.beef)</property>
			<onclick>RunAddOn(script.artwork.beef)</onclick>
			<property name="path">RunAddOn(script.artwork.beef)</property>
			<property name="list">RunAddOn(script.artwork.beef)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>Skin Helper Service Widgets</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.skin.helper.widgets</property>
			<property name="defaultID">script.skin.helper.widgets</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<property name="list">plugin://script.skin.helper.widgets</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2>item</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<property name="translatedPath">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>Video Database Cleaner</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.database.cleaner</property>
			<property name="defaultID">script.database.cleaner</property>
			<property name="translatedPath">RunAddOn(script.database.cleaner)</property>
			<onclick>RunAddOn(script.database.cleaner)</onclick>
			<property name="path">RunAddOn(script.database.cleaner)</property>
			<property name="list">RunAddOn(script.database.cleaner)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR limegreen]Open[/COLOR]Wizard</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.program.openwizard</property>
			<property name="defaultID">plugin.program.openwizard</property>
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<onclick>ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<property name="list">plugin://plugin.program.openwizard</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Trakt</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.trakt</property>
			<property name="defaultID">script.trakt</property>
			<property name="translatedPath">RunAddOn(script.trakt)</property>
			<onclick>RunAddOn(script.trakt)</onclick>
			<property name="path">RunAddOn(script.trakt)</property>
			<property name="list">RunAddOn(script.trakt)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>TheMovieDb Helper</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.video.themoviedb.helper</property>
			<property name="defaultID">plugin.video.themoviedb.helper</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.themoviedb.helper",return)</property>
			<property name="list">plugin://plugin.video.themoviedb.helper</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>Artwork Beef</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.artwork.beef</property>
			<property name="defaultID">script.artwork.beef</property>
			<property name="translatedPath">RunAddOn(script.artwork.beef)</property>
			<onclick>RunAddOn(script.artwork.beef)</onclick>
			<property name="path">RunAddOn(script.artwork.beef)</property>
			<property name="list">RunAddOn(script.artwork.beef)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>Skin Helper Service Widgets</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.skin.helper.widgets</property>
			<property name="defaultID">script.skin.helper.widgets</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://script.skin.helper.widgets",return)</property>
			<property name="list">plugin://script.skin.helper.widgets</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[136]</label>
			<label2>item</label2>
			<icon>DefaultVideoPlaylists.png</icon>
			<thumb />
			<property name="labelID">136</property>
			<property name="defaultID">136</property>
			<property name="translatedPath">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<onclick>ActivateWindow(Videos,special://videoplaylists/,return)</onclick>
			<property name="path">ActivateWindow(Videos,special://videoplaylists/,return)</property>
			<property name="list">special://videoplaylists/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>Video Database Cleaner</label>
			<label2>Program</label2>
			<icon>DefaultAddon.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">script.database.cleaner</property>
			<property name="defaultID">script.database.cleaner</property>
			<property name="translatedPath">RunAddOn(script.database.cleaner)</property>
			<onclick>RunAddOn(script.database.cleaner)</onclick>
			<property name="path">RunAddOn(script.database.cleaner)</property>
			<property name="list">RunAddOn(script.database.cleaner)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<property name="mainmenuid">4</property>
			<label>[COLOR limegreen]Open[/COLOR]Wizard</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>thumb</thumb>
			<property name="labelID">plugin.program.openwizard</property>
			<property name="defaultID">plugin.program.openwizard</property>
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<onclick>ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.program.openwizard",return)</property>
			<property name="list">plugin://plugin.program.openwizard</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>common/reload-skin.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID">31714</property>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32046]</label>
			<label2 />
			<icon>common/update-video.png</icon>
			<thumb />
			<property name="labelID">32046</property>
			<property name="defaultID">32046</property>
			<onclick>UpdateLibrary(video)</onclick>
			<property name="path">UpdateLibrary(video)</property>
			<property name="list">UpdateLibrary(video)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32055]</label>
			<label2 />
			<icon>common/clean-video.png</icon>
			<thumb />
			<property name="labelID">32055</property>
			<property name="defaultID">32055</property>
			<onclick>CleanLibrary(video)</onclick>
			<property name="path">CleanLibrary(video)</property>
			<property name="list">CleanLibrary(video)</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">5</property>
			<label>Reload Skin</label>
			<label2>Custom item</label2>
			<icon>common/reload-skin.png</icon>
			<thumb />
			<property name="labelID">reloadskin</property>
			<property name="defaultID">31714</property>
			<onclick>ReloadSkin</onclick>
			<property name="path">ReloadSkin</property>
			<property name="list">ReloadSkin</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32046]</label>
			<label2 />
			<icon>common/update-video.png</icon>
			<thumb />
			<property name="labelID">32046</property>
			<property name="defaultID">32046</property>
			<onclick>UpdateLibrary(video)</onclick>
			<property name="path">UpdateLibrary(video)</property>
			<property name="list">UpdateLibrary(video)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">5</property>
			<label>$ADDON[script.skinshortcuts 32055]</label>
			<label2 />
			<icon>common/clean-video.png</icon>
			<thumb />
			<property name="labelID">32055</property>
			<property name="defaultID">32055</property>
			<onclick>CleanLibrary(video)</onclick>
			<property name="path">CleanLibrary(video)</property>
			<property name="list">CleanLibrary(video)</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-settings-0">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-settings-0">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings-0)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings-0)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings--0</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Quit</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">quit</property>
			<property name="defaultID">13012</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">7</property>
			<label>Quit</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">quit</property>
			<property name="defaultID">13012</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">7</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
		</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="num-10000" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="Next up" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="Next up" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://script.embuary.helper/?info=getnextup&amp;type=tvshow&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + [Skin.String(widgetvalue-num-10000,0) | String.IsEmpty(Skin.String(widgetvalue-num-10000))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="num-10000" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-num-10000,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="2" />
			<param name="submenuid" value="tvshows" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="true" />
			<param name="hasWidget3" value="true" />
			<param name="hasWidget4" value="true" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2510" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="ContinueWatching" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2510" />
			<param name="widgetName" value="ContinueWatching" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Continue Watching.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + [Skin.String(widgetvalue-tvshows,0) | String.IsEmpty(Skin.String(widgetvalue-tvshows))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2520" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="StartWatching" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2520" />
			<param name="widgetName" value="StartWatching" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Shows to Start Watching.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2530" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="JustOut" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2530" />
			<param name="widgetName" value="JustOut" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/recentaired.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2540" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="RecentlyAdded" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2540" />
			<param name="widgetName" value="RecentlyAdded" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Recent.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2550" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="RandomTv" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2550" />
			<param name="widgetName" value="RandomTv" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Random Tv.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2560" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2570" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="2580" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="tvshows" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-tvshows,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_single" condition="![true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] + !String.IsEqual(Skin.String(HomeLayout),win10) + true">
			<param name="mainmenuid" value="3" />
			<param name="submenuid" value="movies" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3510" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="Movies" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3510" />
			<param name="widgetName" value="Movies" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Movies.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="title" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + [Skin.String(widgetvalue-movies,0) | String.IsEmpty(Skin.String(widgetvalue-movies))]]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3520" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="RandomMovies" />
			</include>
		<include content="widget_base" condition="true">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3520" />
			<param name="widgetName" value="RandomMovies" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="special://profile/playlists/video/Random Movies.xsp" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,1)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3530" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,2)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3540" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,3)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3550" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,4)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3560" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,5)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3570" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,6)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		<include content="widget_header_multi" condition="true + false + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]">
			<param name="widgetid" value="3580" />
			<param name="submenuid" value="movies" />
			<param name="widgetName" value="" />
			</include>
		<include content="widget_base" condition="false">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="movies" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetSortBy" value="" />
			<param name="widgetSortOrder" value="" />
			<param name="widgetLimit" value="$INFO[Skin.String(WidgetsGlobalLimit)]" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="[true + [String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout]]] | String.IsEqual(Skin.String(HomeLayout),win10) | [![true + [$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie)]] + Skin.String(widgetvalue-movies,7)]" />
			<param name="multiRows" value="false + $EXP[IsVerticalLayout]" />
			</include>
		</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
		</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control type="panel" id="1508">
			<visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">special://skin/extras/widgetplaylists/recommendedtvshows.xsp</content>
			</control>
		<control type="panel" id="1508">
			<visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),movies)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">special://skin/extras/widgetplaylists/recommendedmovies.xsp</content>
			</control>
		</include>
	<variable name="1510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://script.embuary.helper/?info=getnextup&amp;type=tvshow&amp;reload=$INFO[Window(Home).Property(widgetreload-episodes)]</value>
		</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="String.Contains(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title) + String.Contains(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Season) + !String.IsEmpty(Container(1510).ListItem.Episode) + !String.Contains(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle) + !String.IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Artist) + !String.IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		</variable>
	<variable name="1520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="String.Contains(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title) + String.Contains(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Season) + !String.IsEmpty(Container(1520).ListItem.Episode) + !String.Contains(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle) + !String.IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Artist) + !String.IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		</variable>
	<variable name="1530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="String.Contains(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title) + String.Contains(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Season) + !String.IsEmpty(Container(1530).ListItem.Episode) + !String.Contains(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle) + !String.IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Artist) + !String.IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		</variable>
	<variable name="1540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="String.Contains(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title) + String.Contains(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Season) + !String.IsEmpty(Container(1540).ListItem.Episode) + !String.Contains(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle) + !String.IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Artist) + !String.IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		</variable>
	<variable name="1550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="String.Contains(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title) + String.Contains(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Season) + !String.IsEmpty(Container(1550).ListItem.Episode) + !String.Contains(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle) + !String.IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Artist) + !String.IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		</variable>
	<variable name="1560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="String.Contains(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title) + String.Contains(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Season) + !String.IsEmpty(Container(1560).ListItem.Episode) + !String.Contains(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle) + !String.IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Artist) + !String.IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		</variable>
	<variable name="1570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="String.Contains(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title) + String.Contains(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Season) + !String.IsEmpty(Container(1570).ListItem.Episode) + !String.Contains(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle) + !String.IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Artist) + !String.IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		</variable>
	<variable name="1580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="String.Contains(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title) + String.Contains(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Season) + !String.IsEmpty(Container(1580).ListItem.Episode) + !String.Contains(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle) + !String.IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Artist) + !String.IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-1">
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-num-10000),1)" />
		<value>Next up</value>
		</variable>
	<variable name="2510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Continue Watching.xsp</value>
		</variable>
	<variable name="widgetinfolabel-2510">
		<value condition="String.Contains(Container(2510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2510).ListItem.label] $INFO[Container(2510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title) + String.Contains(Container(2510).ListItem.FolderPath, pvr://)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Season) + !String.IsEmpty(Container(2510).ListItem.Episode) + !String.Contains(Container(2510).ListItem.TvShowTitle,Container(2510).ListItem.Title)">[UPPERCASE]S$INFO[Container(2510).ListItem.Season]E$INFO[Container(2510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Title)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Label)">$INFO[Container(2510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2510">
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle) + !String.IsEmpty(Container(2510).ListItem.Genre)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.TvShowTitle)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Premiered,, • ]$INFO[Container(2510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Year)">$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Duration,,min. • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Artist) + !String.IsEmpty(Container(2510).ListItem.Album)">$INFO[Container(2510).ListItem.Artist,, • ]$INFO[Container(2510).ListItem.Album,, • ]$INFO[Container(2510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.Property(StartTime))">$INFO[Container(2510).ListItem.Property(ChannelName),, • ]$INFO[Container(2510).ListItem.Property(StartTime),, - ]$INFO[Container(2510).ListItem.Property(EndTime),, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2510).ListItem.StartTime)">$INFO[Container(2510).ListItem.ChannelName,, • ]$INFO[Container(2510).ListItem.StartTime,, - ]$INFO[Container(2510).ListItem.EndTime,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		</variable>
	<variable name="2520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Shows to Start Watching.xsp</value>
		</variable>
	<variable name="widgetinfolabel-2520">
		<value condition="String.Contains(Container(2520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2520).ListItem.label] $INFO[Container(2520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title) + String.Contains(Container(2520).ListItem.FolderPath, pvr://)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Season) + !String.IsEmpty(Container(2520).ListItem.Episode) + !String.Contains(Container(2520).ListItem.TvShowTitle,Container(2520).ListItem.Title)">[UPPERCASE]S$INFO[Container(2520).ListItem.Season]E$INFO[Container(2520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Title)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Label)">$INFO[Container(2520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2520">
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle) + !String.IsEmpty(Container(2520).ListItem.Genre)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.TvShowTitle)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Premiered,, • ]$INFO[Container(2520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Year)">$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Duration,,min. • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Artist) + !String.IsEmpty(Container(2520).ListItem.Album)">$INFO[Container(2520).ListItem.Artist,, • ]$INFO[Container(2520).ListItem.Album,, • ]$INFO[Container(2520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.Property(StartTime))">$INFO[Container(2520).ListItem.Property(ChannelName),, • ]$INFO[Container(2520).ListItem.Property(StartTime),, - ]$INFO[Container(2520).ListItem.Property(EndTime),, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2520).ListItem.StartTime)">$INFO[Container(2520).ListItem.ChannelName,, • ]$INFO[Container(2520).ListItem.StartTime,, - ]$INFO[Container(2520).ListItem.EndTime,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		</variable>
	<variable name="2530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/recentaired.xsp</value>
		</variable>
	<variable name="widgetinfolabel-2530">
		<value condition="String.Contains(Container(2530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2530).ListItem.label] $INFO[Container(2530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title) + String.Contains(Container(2530).ListItem.FolderPath, pvr://)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Season) + !String.IsEmpty(Container(2530).ListItem.Episode) + !String.Contains(Container(2530).ListItem.TvShowTitle,Container(2530).ListItem.Title)">[UPPERCASE]S$INFO[Container(2530).ListItem.Season]E$INFO[Container(2530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Title)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Label)">$INFO[Container(2530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2530">
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle) + !String.IsEmpty(Container(2530).ListItem.Genre)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.TvShowTitle)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Premiered,, • ]$INFO[Container(2530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Year)">$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Duration,,min. • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Artist) + !String.IsEmpty(Container(2530).ListItem.Album)">$INFO[Container(2530).ListItem.Artist,, • ]$INFO[Container(2530).ListItem.Album,, • ]$INFO[Container(2530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.Property(StartTime))">$INFO[Container(2530).ListItem.Property(ChannelName),, • ]$INFO[Container(2530).ListItem.Property(StartTime),, - ]$INFO[Container(2530).ListItem.Property(EndTime),, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2530).ListItem.StartTime)">$INFO[Container(2530).ListItem.ChannelName,, • ]$INFO[Container(2530).ListItem.StartTime,, - ]$INFO[Container(2530).ListItem.EndTime,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		</variable>
	<variable name="2540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Recent.xsp</value>
		</variable>
	<variable name="widgetinfolabel-2540">
		<value condition="String.Contains(Container(2540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2540).ListItem.label] $INFO[Container(2540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title) + String.Contains(Container(2540).ListItem.FolderPath, pvr://)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Season) + !String.IsEmpty(Container(2540).ListItem.Episode) + !String.Contains(Container(2540).ListItem.TvShowTitle,Container(2540).ListItem.Title)">[UPPERCASE]S$INFO[Container(2540).ListItem.Season]E$INFO[Container(2540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Title)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Label)">$INFO[Container(2540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2540">
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle) + !String.IsEmpty(Container(2540).ListItem.Genre)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.TvShowTitle)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Premiered,, • ]$INFO[Container(2540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Year)">$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Duration,,min. • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Artist) + !String.IsEmpty(Container(2540).ListItem.Album)">$INFO[Container(2540).ListItem.Artist,, • ]$INFO[Container(2540).ListItem.Album,, • ]$INFO[Container(2540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.Property(StartTime))">$INFO[Container(2540).ListItem.Property(ChannelName),, • ]$INFO[Container(2540).ListItem.Property(StartTime),, - ]$INFO[Container(2540).ListItem.Property(EndTime),, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2540).ListItem.StartTime)">$INFO[Container(2540).ListItem.ChannelName,, • ]$INFO[Container(2540).ListItem.StartTime,, - ]$INFO[Container(2540).ListItem.EndTime,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		</variable>
	<variable name="2550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Random Tv.xsp</value>
		</variable>
	<variable name="widgetinfolabel-2550">
		<value condition="String.Contains(Container(2550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2550).ListItem.label] $INFO[Container(2550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title) + String.Contains(Container(2550).ListItem.FolderPath, pvr://)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Season) + !String.IsEmpty(Container(2550).ListItem.Episode) + !String.Contains(Container(2550).ListItem.TvShowTitle,Container(2550).ListItem.Title)">[UPPERCASE]S$INFO[Container(2550).ListItem.Season]E$INFO[Container(2550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Title)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Label)">$INFO[Container(2550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2550">
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle) + !String.IsEmpty(Container(2550).ListItem.Genre)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.TvShowTitle)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Premiered,, • ]$INFO[Container(2550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Year)">$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Duration,,min. • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Artist) + !String.IsEmpty(Container(2550).ListItem.Album)">$INFO[Container(2550).ListItem.Artist,, • ]$INFO[Container(2550).ListItem.Album,, • ]$INFO[Container(2550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.Property(StartTime))">$INFO[Container(2550).ListItem.Property(ChannelName),, • ]$INFO[Container(2550).ListItem.Property(StartTime),, - ]$INFO[Container(2550).ListItem.Property(EndTime),, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2550).ListItem.StartTime)">$INFO[Container(2550).ListItem.ChannelName,, • ]$INFO[Container(2550).ListItem.StartTime,, - ]$INFO[Container(2550).ListItem.EndTime,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		</variable>
	<variable name="2560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2560">
		<value condition="String.Contains(Container(2560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2560).ListItem.label] $INFO[Container(2560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title) + String.Contains(Container(2560).ListItem.FolderPath, pvr://)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Season) + !String.IsEmpty(Container(2560).ListItem.Episode) + !String.Contains(Container(2560).ListItem.TvShowTitle,Container(2560).ListItem.Title)">[UPPERCASE]S$INFO[Container(2560).ListItem.Season]E$INFO[Container(2560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Title)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Label)">$INFO[Container(2560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2560">
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle) + !String.IsEmpty(Container(2560).ListItem.Genre)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.TvShowTitle)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Premiered,, • ]$INFO[Container(2560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Year)">$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Duration,,min. • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Artist) + !String.IsEmpty(Container(2560).ListItem.Album)">$INFO[Container(2560).ListItem.Artist,, • ]$INFO[Container(2560).ListItem.Album,, • ]$INFO[Container(2560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.Property(StartTime))">$INFO[Container(2560).ListItem.Property(ChannelName),, • ]$INFO[Container(2560).ListItem.Property(StartTime),, - ]$INFO[Container(2560).ListItem.Property(EndTime),, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2560).ListItem.StartTime)">$INFO[Container(2560).ListItem.ChannelName,, • ]$INFO[Container(2560).ListItem.StartTime,, - ]$INFO[Container(2560).ListItem.EndTime,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		</variable>
	<variable name="2570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2570">
		<value condition="String.Contains(Container(2570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2570).ListItem.label] $INFO[Container(2570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title) + String.Contains(Container(2570).ListItem.FolderPath, pvr://)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Season) + !String.IsEmpty(Container(2570).ListItem.Episode) + !String.Contains(Container(2570).ListItem.TvShowTitle,Container(2570).ListItem.Title)">[UPPERCASE]S$INFO[Container(2570).ListItem.Season]E$INFO[Container(2570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Title)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Label)">$INFO[Container(2570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2570">
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle) + !String.IsEmpty(Container(2570).ListItem.Genre)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.TvShowTitle)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Premiered,, • ]$INFO[Container(2570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Year)">$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Duration,,min. • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Artist) + !String.IsEmpty(Container(2570).ListItem.Album)">$INFO[Container(2570).ListItem.Artist,, • ]$INFO[Container(2570).ListItem.Album,, • ]$INFO[Container(2570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.Property(StartTime))">$INFO[Container(2570).ListItem.Property(ChannelName),, • ]$INFO[Container(2570).ListItem.Property(StartTime),, - ]$INFO[Container(2570).ListItem.Property(EndTime),, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2570).ListItem.StartTime)">$INFO[Container(2570).ListItem.ChannelName,, • ]$INFO[Container(2570).ListItem.StartTime,, - ]$INFO[Container(2570).ListItem.EndTime,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		</variable>
	<variable name="2580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-2580">
		<value condition="String.Contains(Container(2580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2580).ListItem.label] $INFO[Container(2580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title) + String.Contains(Container(2580).ListItem.FolderPath, pvr://)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Season) + !String.IsEmpty(Container(2580).ListItem.Episode) + !String.Contains(Container(2580).ListItem.TvShowTitle,Container(2580).ListItem.Title)">[UPPERCASE]S$INFO[Container(2580).ListItem.Season]E$INFO[Container(2580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Title)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Label)">$INFO[Container(2580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-2580">
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle) + !String.IsEmpty(Container(2580).ListItem.Genre)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.TvShowTitle)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Premiered,, • ]$INFO[Container(2580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Year)">$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Duration,,min. • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Artist) + !String.IsEmpty(Container(2580).ListItem.Album)">$INFO[Container(2580).ListItem.Artist,, • ]$INFO[Container(2580).ListItem.Album,, • ]$INFO[Container(2580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.Property(StartTime))">$INFO[Container(2580).ListItem.Property(ChannelName),, • ]$INFO[Container(2580).ListItem.Property(StartTime),, - ]$INFO[Container(2580).ListItem.Property(EndTime),, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(2580).ListItem.StartTime)">$INFO[Container(2580).ListItem.ChannelName,, • ]$INFO[Container(2580).ListItem.StartTime,, - ]$INFO[Container(2580).ListItem.EndTime,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-2">
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),4)">RandomTv</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),3)">RecentlyAdded</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),2)">JustOut</value>
		<value condition="String.IsEqual(Skin.String(widgetvalue-tvshows),1)">StartWatching</value>
		<value>ContinueWatching</value>
		</variable>
	<variable name="3510-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Movies.xsp</value>
		</variable>
	<variable name="widgetinfolabel-3510">
		<value condition="String.Contains(Container(3510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3510).ListItem.label] $INFO[Container(3510).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title) + String.Contains(Container(3510).ListItem.FolderPath, pvr://)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Season) + !String.IsEmpty(Container(3510).ListItem.Episode) + !String.Contains(Container(3510).ListItem.TvShowTitle,Container(3510).ListItem.Title)">[UPPERCASE]S$INFO[Container(3510).ListItem.Season]E$INFO[Container(3510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Title)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Label)">$INFO[Container(3510).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3510">
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle) + !String.IsEmpty(Container(3510).ListItem.Genre)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.TvShowTitle)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Premiered,, • ]$INFO[Container(3510).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Year)">$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Duration,,min. • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Artist) + !String.IsEmpty(Container(3510).ListItem.Album)">$INFO[Container(3510).ListItem.Artist,, • ]$INFO[Container(3510).ListItem.Album,, • ]$INFO[Container(3510).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.Property(StartTime))">$INFO[Container(3510).ListItem.Property(ChannelName),, • ]$INFO[Container(3510).ListItem.Property(StartTime),, - ]$INFO[Container(3510).ListItem.Property(EndTime),, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3510).ListItem.StartTime)">$INFO[Container(3510).ListItem.ChannelName,, • ]$INFO[Container(3510).ListItem.StartTime,, - ]$INFO[Container(3510).ListItem.EndTime,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		</variable>
	<variable name="3520-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>special://profile/playlists/video/Random Movies.xsp</value>
		</variable>
	<variable name="widgetinfolabel-3520">
		<value condition="String.Contains(Container(3520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3520).ListItem.label] $INFO[Container(3520).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title) + String.Contains(Container(3520).ListItem.FolderPath, pvr://)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Season) + !String.IsEmpty(Container(3520).ListItem.Episode) + !String.Contains(Container(3520).ListItem.TvShowTitle,Container(3520).ListItem.Title)">[UPPERCASE]S$INFO[Container(3520).ListItem.Season]E$INFO[Container(3520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Title)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Label)">$INFO[Container(3520).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3520">
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle) + !String.IsEmpty(Container(3520).ListItem.Genre)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.TvShowTitle)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Premiered,, • ]$INFO[Container(3520).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Year)">$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Duration,,min. • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Artist) + !String.IsEmpty(Container(3520).ListItem.Album)">$INFO[Container(3520).ListItem.Artist,, • ]$INFO[Container(3520).ListItem.Album,, • ]$INFO[Container(3520).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.Property(StartTime))">$INFO[Container(3520).ListItem.Property(ChannelName),, • ]$INFO[Container(3520).ListItem.Property(StartTime),, - ]$INFO[Container(3520).ListItem.Property(EndTime),, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3520).ListItem.StartTime)">$INFO[Container(3520).ListItem.ChannelName,, • ]$INFO[Container(3520).ListItem.StartTime,, - ]$INFO[Container(3520).ListItem.EndTime,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		</variable>
	<variable name="3530-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3530">
		<value condition="String.Contains(Container(3530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3530).ListItem.label] $INFO[Container(3530).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title) + String.Contains(Container(3530).ListItem.FolderPath, pvr://)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Season) + !String.IsEmpty(Container(3530).ListItem.Episode) + !String.Contains(Container(3530).ListItem.TvShowTitle,Container(3530).ListItem.Title)">[UPPERCASE]S$INFO[Container(3530).ListItem.Season]E$INFO[Container(3530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Title)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Label)">$INFO[Container(3530).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3530">
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle) + !String.IsEmpty(Container(3530).ListItem.Genre)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.TvShowTitle)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Premiered,, • ]$INFO[Container(3530).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Year)">$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Duration,,min. • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Artist) + !String.IsEmpty(Container(3530).ListItem.Album)">$INFO[Container(3530).ListItem.Artist,, • ]$INFO[Container(3530).ListItem.Album,, • ]$INFO[Container(3530).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.Property(StartTime))">$INFO[Container(3530).ListItem.Property(ChannelName),, • ]$INFO[Container(3530).ListItem.Property(StartTime),, - ]$INFO[Container(3530).ListItem.Property(EndTime),, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3530).ListItem.StartTime)">$INFO[Container(3530).ListItem.ChannelName,, • ]$INFO[Container(3530).ListItem.StartTime,, - ]$INFO[Container(3530).ListItem.EndTime,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		</variable>
	<variable name="3540-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3540">
		<value condition="String.Contains(Container(3540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3540).ListItem.label] $INFO[Container(3540).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title) + String.Contains(Container(3540).ListItem.FolderPath, pvr://)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Season) + !String.IsEmpty(Container(3540).ListItem.Episode) + !String.Contains(Container(3540).ListItem.TvShowTitle,Container(3540).ListItem.Title)">[UPPERCASE]S$INFO[Container(3540).ListItem.Season]E$INFO[Container(3540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Title)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Label)">$INFO[Container(3540).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3540">
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle) + !String.IsEmpty(Container(3540).ListItem.Genre)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.TvShowTitle)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Premiered,, • ]$INFO[Container(3540).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Year)">$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Duration,,min. • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Artist) + !String.IsEmpty(Container(3540).ListItem.Album)">$INFO[Container(3540).ListItem.Artist,, • ]$INFO[Container(3540).ListItem.Album,, • ]$INFO[Container(3540).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.Property(StartTime))">$INFO[Container(3540).ListItem.Property(ChannelName),, • ]$INFO[Container(3540).ListItem.Property(StartTime),, - ]$INFO[Container(3540).ListItem.Property(EndTime),, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3540).ListItem.StartTime)">$INFO[Container(3540).ListItem.ChannelName,, • ]$INFO[Container(3540).ListItem.StartTime,, - ]$INFO[Container(3540).ListItem.EndTime,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		</variable>
	<variable name="3550-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3550">
		<value condition="String.Contains(Container(3550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3550).ListItem.label] $INFO[Container(3550).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title) + String.Contains(Container(3550).ListItem.FolderPath, pvr://)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Season) + !String.IsEmpty(Container(3550).ListItem.Episode) + !String.Contains(Container(3550).ListItem.TvShowTitle,Container(3550).ListItem.Title)">[UPPERCASE]S$INFO[Container(3550).ListItem.Season]E$INFO[Container(3550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Title)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Label)">$INFO[Container(3550).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3550">
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle) + !String.IsEmpty(Container(3550).ListItem.Genre)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.TvShowTitle)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Premiered,, • ]$INFO[Container(3550).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Year)">$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Duration,,min. • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Artist) + !String.IsEmpty(Container(3550).ListItem.Album)">$INFO[Container(3550).ListItem.Artist,, • ]$INFO[Container(3550).ListItem.Album,, • ]$INFO[Container(3550).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.Property(StartTime))">$INFO[Container(3550).ListItem.Property(ChannelName),, • ]$INFO[Container(3550).ListItem.Property(StartTime),, - ]$INFO[Container(3550).ListItem.Property(EndTime),, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3550).ListItem.StartTime)">$INFO[Container(3550).ListItem.ChannelName,, • ]$INFO[Container(3550).ListItem.StartTime,, - ]$INFO[Container(3550).ListItem.EndTime,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		</variable>
	<variable name="3560-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3560">
		<value condition="String.Contains(Container(3560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3560).ListItem.label] $INFO[Container(3560).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title) + String.Contains(Container(3560).ListItem.FolderPath, pvr://)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Season) + !String.IsEmpty(Container(3560).ListItem.Episode) + !String.Contains(Container(3560).ListItem.TvShowTitle,Container(3560).ListItem.Title)">[UPPERCASE]S$INFO[Container(3560).ListItem.Season]E$INFO[Container(3560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Title)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Label)">$INFO[Container(3560).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3560">
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle) + !String.IsEmpty(Container(3560).ListItem.Genre)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.TvShowTitle)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Premiered,, • ]$INFO[Container(3560).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Year)">$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Duration,,min. • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Artist) + !String.IsEmpty(Container(3560).ListItem.Album)">$INFO[Container(3560).ListItem.Artist,, • ]$INFO[Container(3560).ListItem.Album,, • ]$INFO[Container(3560).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.Property(StartTime))">$INFO[Container(3560).ListItem.Property(ChannelName),, • ]$INFO[Container(3560).ListItem.Property(StartTime),, - ]$INFO[Container(3560).ListItem.Property(EndTime),, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3560).ListItem.StartTime)">$INFO[Container(3560).ListItem.ChannelName,, • ]$INFO[Container(3560).ListItem.StartTime,, - ]$INFO[Container(3560).ListItem.EndTime,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		</variable>
	<variable name="3570-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3570">
		<value condition="String.Contains(Container(3570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3570).ListItem.label] $INFO[Container(3570).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title) + String.Contains(Container(3570).ListItem.FolderPath, pvr://)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Season) + !String.IsEmpty(Container(3570).ListItem.Episode) + !String.Contains(Container(3570).ListItem.TvShowTitle,Container(3570).ListItem.Title)">[UPPERCASE]S$INFO[Container(3570).ListItem.Season]E$INFO[Container(3570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Title)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Label)">$INFO[Container(3570).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3570">
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle) + !String.IsEmpty(Container(3570).ListItem.Genre)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.TvShowTitle)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Premiered,, • ]$INFO[Container(3570).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Year)">$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Duration,,min. • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Artist) + !String.IsEmpty(Container(3570).ListItem.Album)">$INFO[Container(3570).ListItem.Artist,, • ]$INFO[Container(3570).ListItem.Album,, • ]$INFO[Container(3570).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.Property(StartTime))">$INFO[Container(3570).ListItem.Property(ChannelName),, • ]$INFO[Container(3570).ListItem.Property(StartTime),, - ]$INFO[Container(3570).ListItem.Property(EndTime),, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3570).ListItem.StartTime)">$INFO[Container(3570).ListItem.ChannelName,, • ]$INFO[Container(3570).ListItem.StartTime,, - ]$INFO[Container(3570).ListItem.EndTime,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		</variable>
	<variable name="3580-refresh">
		<value condition="!String.IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!String.IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="Window.IsActive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
		</variable>
	<variable name="widgetinfolabel-3580">
		<value condition="String.Contains(Container(3580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3580).ListItem.label] $INFO[Container(3580).ListItem.label2]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title) + String.Contains(Container(3580).ListItem.FolderPath, pvr://)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Season) + !String.IsEmpty(Container(3580).ListItem.Episode) + !String.Contains(Container(3580).ListItem.TvShowTitle,Container(3580).ListItem.Title)">[UPPERCASE]S$INFO[Container(3580).ListItem.Season]E$INFO[Container(3580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Title)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Label)">$INFO[Container(3580).ListItem.Label]</value>
		</variable>
	<variable name="widgetsubtitle-3580">
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle) + !String.IsEmpty(Container(3580).ListItem.Genre)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.TvShowTitle)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Premiered,, • ]$INFO[Container(3580).ListItem.Duration,,min.]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Year)">$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Duration,,min. • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Artist) + !String.IsEmpty(Container(3580).ListItem.Album)">$INFO[Container(3580).ListItem.Artist,, • ]$INFO[Container(3580).ListItem.Album,, • ]$INFO[Container(3580).ListItem.Duration]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.Property(StartTime))">$INFO[Container(3580).ListItem.Property(ChannelName),, • ]$INFO[Container(3580).ListItem.Property(StartTime),, - ]$INFO[Container(3580).ListItem.Property(EndTime),, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!String.IsEmpty(Container(3580).ListItem.StartTime)">$INFO[Container(3580).ListItem.ChannelName,, • ]$INFO[Container(3580).ListItem.StartTime,, - ]$INFO[Container(3580).ListItem.EndTime,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		</variable>
	<variable name="widgetlabel-3">
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),7)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),6)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),5)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),4)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),3)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),2)" />
		<value condition="String.IsEqual(Skin.String(widgetvalue-movies),1)">RandomMovies</value>
		<value>Movies</value>
		</variable>
	</includes>
